from flask import Flask, request, jsonify, render_template
import google.generativeai as genai
import os
import difflib  # ููุจุญุซ ุงูุฐูู ูู ุงูุจูุงูุงุช

# โ ุฅุนุฏุงุฏ ููุชุงุญ API
GENAI_API_KEY = "AIzaSyC8BMJTqamEK9cHB-rvtxwJ-wfbvA5eeGs"  # ุถุน ููุชุงุญ API ููุง
genai.configure(api_key=GENAI_API_KEY)

# โ ุชุญุฏูุฏ ูููุฐุฌ Gemini ุงูููุงุณุจ
MODEL_NAME = "gemini-1.5-flash-latest"
model = genai.GenerativeModel(MODEL_NAME)

# โ ุชุญุฏูุฏ ูุณุงุฑ ููู ุงูุจูุงูุงุช
file_path = "extracted_text.txt"

# โ ุงูุชุฃูุฏ ูู ุฃู ุงูููู ููุฌูุฏ
if not os.path.exists(file_path):
    raise FileNotFoundError(f"โ ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูููู '{file_path}'. ุชุฃูุฏ ูู ูุถุน ุงูุจูุงูุงุช ูู ุงููุณุงุฑ ุงูุตุญูุญ.")

# โ ุชุญููู ุงูุจูุงูุงุช ูู ุงูููู ุงููุตู
with open(file_path, "r", encoding="utf-8") as f:
    university_data = f.read().split("\n")  # ุชูุณูู ุงูุจูุงูุงุช ุฅูู ุฃุณุทุฑ ูุณูููุฉ ุงูุจุญุซ

# โ ุชุดุบูู Flask
app = Flask(__name__, template_folder="templates")

# โ ุฑุฏูุฏ ุฌุงูุฒุฉ ููุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ูุงูุชุญูุงุช
custom_responses = {
    "ูู ุตูุนู": "๐จโ๐ป ููุฏ ุชู ุฅูุดุงุฆู ุจูุงุณุทุฉ ุงูุจุดูููุฏุณ ุนูุฑู ุฎุงูุฏ!",
    "ูู ูู ูุจุฑูุฌู": "๐ก ุชู ุชุทููุฑู ุจูุงุณุทุฉ ุงูุจุดูููุฏุณ ุนูุฑู ุฎุงูุฏ!",
    "ุดูุฑุง": "๐ ุงูุนูู! ุฃูุง ููุง ุฏุงุฆููุง ูููุณุงุนุฏุฉ ๐",
}

friendly_responses = {
    "ููุง": "ููุง ููู! ๐ ููู ุฃูุฏุฑ ุฃุณุงุนุฏู ุงููููุ",
    "ุงูุณูุงู ุนูููู": "ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู! ๐ธ ููู ุญุงููุ",
    "ูุฑุญุจุง": "ุฃูููุง ูุณูููุง! ๐ค ููู ูููููู ูุณุงุนุฏุชูุ",
}

# โ ุงูุจุญุซ ุงูุฐูู ูู ุจูุงูุงุช ุงูุฌุงูุนุฉ ุจุงุณุชุฎุฏุงู `difflib`
def search_university_data(query):
    best_match = difflib.get_close_matches(query, university_data, n=1, cutoff=0.4)  # ุชุญุณูู ุงูุจุญุซ
    return best_match[0] if best_match else None

# โ ุนุฑุถ ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
@app.route("/")
def home():
    return render_template("index.html")

# โ ููุทุฉ API ููุนุงูุฌุฉ ุงุณุชูุณุงุฑุงุช ุงูุดุงุช ุจูุช
@app.route("/chat", methods=["POST"])
def chat():
    data = request.json
    user_message = data.get("message", "").strip().lower()

    if not user_message:
        return jsonify({"response": "โ ูู ูุถูู ุฃุฏุฎู ุณุคุงููุง ูุงุถุญูุง ๐."})

    # โ ุงูุชุญูู ูู ุงูุฑุฏูุฏ ุงูุฌุงูุฒุฉ
    if user_message in custom_responses:
        return jsonify({"response": custom_responses[user_message]})

    # โ ุงูุชุญูู ูู ุงูุชุญูุงุช
    if user_message in friendly_responses:
        return jsonify({"response": friendly_responses[user_message]})

    # โ ุงูุจุญุซ ุงูุฐูู ูู ุจูุงูุงุช ุงูุฌุงูุนุฉ
    answer_from_data = search_university_data(user_message)
    if answer_from_data:
        return jsonify({"response": f"๐ {answer_from_data}"})

    # โ ุทูุจ Gemini API ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุฅุฌุงุจุฉ ูู ุงูุจูุงูุงุช
    prompt = f"""
    ูุฏูู ูุฐู ุงููุนูููุงุช ููุท ุนู ุงูุฌุงูุนุฉ:
    {' '.join(university_data[:50])}  # ุฅุฑุณุงู ุฃูู 50 ุณุทุฑ ููุท ูุชูููุฑ ุงูููุงุฑุฏ

    ุฃุฌุจ ุนู ุงูุณุคุงู ุงูุชุงูู ุจูุงุกู ุนูู ูุฐู ุงููุนูููุงุช ููุท:
    {user_message}

    ุฅุฐุง ูู ุชุฌุฏ ุฅุฌุงุจุฉ ูุงุถุญุฉุ ุฃุฎุจุฑ ุงููุณุชุฎุฏู ุจูุทู ุฃูู ูุณุชุทูุน ุงูุจุญุซ ูู ูููุน ุงูุฌุงูุนุฉ ุงูุฑุณูู.
    """

    response = model.generate_content(prompt)
    answer = response.text.strip() if response.text else "๐ค ูู ุฃุฌุฏ ูุนูููุงุช ุฏูููุฉุ ููููู ุงูุชุญูู ูู ูููุน ุงูุฌุงูุนุฉ ุงูุฑุณูู."

    return jsonify({"response": answer})

# โ ุชุดุบูู ุงูุชุทุจูู
if __name__ == "__main__":
    app.run(debug=True)
